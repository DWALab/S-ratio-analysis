# -*- coding: utf-8 -*-
"""S-ratio(analysis)_Areacode.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jKBalHYxbq1THLS-YyOvr2-Hp1M9SmU-
"""

import pandas as pd
from google.colab import drive

drive.mount('/content/drive')  # Mount Google Drive

# Now you can use the path relative to the mounted drive
file_path = '//content/drive/MyDrive/INO binding curves for analysis/G108VI133ABimL-BH3scr-INO.csv'
# Input the number of Free Acceptor bin
df = pd.read_csv(file_path)[0:17]

df.describe()

df = df[["X","Y"]]

df

# prompt: Using dataframe df: give me area under the curve

import numpy as np
areaA = np.trapz(df['Y'], df['X'])
print(areaA)

# prompt: Using dataframe df: give me area above the curve

import numpy as np
areaB = np.trapz(df['X'], df['Y'])
print(areaB)

#Give me the area above the curve from the dataframe df
# Find the maximum x and y values
x_max = df['X'].max()
y_max = df['Y'].max()

# Calculate the area of the rectangle
rectangle_area = x_max * y_max

# Calculate the area above the curve
area_above = rectangle_area - areaA

print(area_above)

# prompt: Using dataframe df: give me area under the curve(AreaA)

import altair as alt
chart = alt.Chart(df).mark_area().encode(x='X', y='Y')
chart

# prompt: Using dataframe df: give me area above the curve (AreaB)

import altair as alt
chart = alt.Chart(df).mark_area().encode(x='Y', y='X')
chart

# prompt: multiply the y minimum to the x maximum

y_min = df['Y'].min()
x_max = df['X'].max()
areaC = y_min * x_max # This line calculates areaC

Ssratio = areaA/areaB
Sratio = (areaA-areaC)/areaB # Now areaC is defined and can be used here
Srationew=(areaA-areaC)/area_above
print (Ssratio)
print (Sratio)
print (Srationew)

print (areaA)
print (areaB)
print (areaC)
print (area_above)